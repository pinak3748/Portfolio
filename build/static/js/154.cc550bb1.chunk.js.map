{"version":3,"file":"static/js/154.cc550bb1.chunk.js","mappings":"sMAGaA,EAASC,GAAAA,CAAa,CACjCC,UAAWC,WACXC,QAASD,aACTE,WAAY,aACZC,QAAQ,EACRC,MAAOJ,uLACPK,2BAA2B,IAGvBC,EAAUC,GAAAA,CAAgBV,GAEnBW,EAAS,SAACC,GAAD,OAAYH,EAAQI,MAAMD,K,gICuFhD,GAAeE,EAAAA,EAAAA,IACbC,EAAAA,EAAAA,IA9Fa,WACb,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAIRrB,EAAAA,EAAAA,MAHc,6BAGMsB,MAAK,SAACC,GACxBL,EAAeK,MAGjBvB,EAAAA,EAAAA,MANoB,wBAMMsB,MAAK,SAACC,GAC9BH,EAAUG,QAEX,KAGD,iCACE,eAAIC,UAAU,YAAd,mCAEA,iBAAKA,UAAU,wBAAf,WACE,SAACC,EAAA,MAAD,CAAYD,UAAU,mBAAtB,SACGL,EAAOO,OAAS,GAAKP,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OAC/B,UAACJ,EAAA,MAAD,CACEK,YAAa,CAAEC,QAAS,CAAC,EAAG,IAC5BC,WAAY,CAAEC,SAAU,IACxBT,UAAU,6BAHZ,WAME,gBACEA,UAAU,YACVU,MAAO,CAAEC,gBAAiBP,EAAMQ,SAFlC,UAIE,gBAAKC,KAAK1B,EAAAA,EAAAA,GAAOiB,EAAMU,MAAOC,IAAI,aAAaC,MAAM,oCAEvD,cAAGhB,UAAU,SAAb,SAAuBI,EAAMa,SARxBZ,SAYX,gBAAKL,UAAU,kBAAf,SACGP,EAAYU,KAAI,SAACe,EAAYb,GAAb,OACf,UAACJ,EAAA,MAAD,CACED,UAAU,uBADZ,WAIE,gBAAKA,UAAU,uBAAf,UACE,cAAGA,UAAU,YAAb,SAA0BkB,EAAWC,UAEvC,SAAClB,EAAA,MAAD,CAAYD,UAAU,wBAAtB,SACGkB,EAAWE,MAAMjB,KAAI,SAACkB,GAAD,OACpB,iCACE,UAACpB,EAAA,MAAD,CACEK,YAAa,CAAEC,QAAS,CAAC,EAAG,IAC5BC,WAAY,CAAEC,SAAU,IACxBT,UAAU,uBACV,cACA,WAAUqB,EAAKJ,KALjB,WASE,eAAIjB,UAAU,YAAd,SAA2BqB,EAAKJ,QAChC,cAAGjB,UAAU,SAAb,SAAuBqB,EAAKC,YAHvBD,EAAKE,OAKZ,SAACtB,EAAA,MAAD,CACEK,YAAa,CAAEC,QAAS,CAAC,EAAG,IAC5BC,WAAY,CAAEC,SAAU,IACxBT,UAAU,uBACV,cACA,WAAUqB,EAAKJ,KALjB,UAQE,cAAGjB,UAAU,SAAb,SAAuBqB,EAAKG,QAFvBH,EAAKJ,gBA1BbZ,gBAkDE,eACnB,SACA,iB,0GCpFF,EAjBgB,SAACoB,EAAWC,EAAQC,GAApB,OAAmC,WACjD,OACE,iBAAKC,GAAIF,EAAQ1B,UAAS,yBAAoB2B,GAA9C,WAEE,iBAAK3B,UAAU,yBAAf,WACE,SAACyB,EAAD,KAEA,iBAAKzB,UAAU,YAAf,WACE,cAAGA,UAAU,SAAb,4BACA,cAAGA,UAAU,SAAb,wCAGJ,SAAC,KAAD,CAAgB6B,OAAQH,S,UCA9B,EAZmB,SAACD,EAAWE,GAAZ,OAA2B,WAC5C,OACE,SAAC1B,EAAA,MAAD,CACEK,YAAa,CAAEwB,EAAG,CAAC,IAAK,GAAI,GAAIvB,QAAS,CAAC,EAAG,EAAG,IAChDC,WAAY,CAAEC,SAAU,IACxBT,UAAS,UAAK2B,EAAL,cAHX,UAKE,SAACF,EAAD","sources":["client.js","container/Skills/Skills.jsx","wrapper/AppWrap.js","wrapper/MotionWrap.js"],"sourcesContent":["import sanityClient from '@sanity/client';\r\nimport imageUrlBuilder from '@sanity/image-url';\r\n\r\nexport const client = sanityClient({\r\n  projectId: process.env.REACT_APP_SANITY_PROJECT_ID,\r\n  dataset: process.env.REACT_APP_DATABASE,\r\n  apiVersion: '2022-02-18',\r\n  useCdn: true,\r\n  token: process.env.REACT_APP_SANITY_TOKEN,\r\n  ignoreBrowserTokenWarning: true,\r\n});\r\n\r\nconst builder = imageUrlBuilder(client);\r\n\r\nexport const urlFor = (source) => builder.image(source);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nimport { AppWrap, MotionWrap } from '../../wrapper';\r\nimport { urlFor, client } from '../../client';\r\nimport './Skills.scss';\r\n\r\nconst Skills = () => {\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [skills, setSkills] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const query = '*[_type == \"experiences\"]';\r\n    const skillsQuery = '*[_type == \"skills\"]';\r\n\r\n    client.fetch(query).then((data) => {\r\n      setExperiences(data);\r\n    });\r\n\r\n    client.fetch(skillsQuery).then((data) => {\r\n      setSkills(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"head-text\">Skills & Experiences</h2>\r\n\r\n      <div className=\"app__skills-container\">\r\n        <motion.div className=\"app__skills-list\">\r\n          {skills.length > 0 && skills.map((skill, index) => (\r\n            <motion.div\r\n              whileInView={{ opacity: [0, 1] }}\r\n              transition={{ duration: 0.5 }}\r\n              className=\"app__skills-item app__flex\"\r\n              key={index}\r\n            >\r\n              <div\r\n                className=\"app__flex\"\r\n                style={{ backgroundColor: skill.bgColor }}\r\n              >\r\n                <img src={urlFor(skill.icon)} alt=\"skillImage\" sizes=\"(min-width: 150) 50vw, 100vw\" />\r\n              </div>\r\n              <p className=\"p-text\">{skill.name}</p>\r\n            </motion.div>\r\n          ))}\r\n        </motion.div>\r\n        <div className=\"app__skills-exp\">\r\n          {experiences.map((experience, index) => (\r\n            <motion.div\r\n              className=\"app__skills-exp-item\"\r\n              key={index}\r\n            >\r\n              <div className=\"app__skills-exp-year\">\r\n                <p className=\"bold-text\">{experience.year}</p>\r\n              </div>\r\n              <motion.div className=\"app__skills-exp-works\">\r\n                {experience.works.map((work) => (\r\n                  <>\r\n                    <motion.div\r\n                      whileInView={{ opacity: [0, 1] }}\r\n                      transition={{ duration: 0.5 }}\r\n                      className=\"app__skills-exp-work\"\r\n                      data-tip\r\n                      data-for={work.name}\r\n                      // eslint-disable-next-line no-underscore-dangle\r\n                      key={work._key}\r\n                    >\r\n                      <h4 className=\"bold-text\">{work.name}</h4>\r\n                      <p className=\"p-text\">{work.company}</p>\r\n                    </motion.div>\r\n                    <motion.div\r\n                      whileInView={{ opacity: [0, 1] }}\r\n                      transition={{ duration: 0.5 }}\r\n                      className=\"app__skills-exp-desc\"\r\n                      data-tip\r\n                      data-for={work.name}\r\n                      key={work.name}\r\n                    >\r\n                      <p className=\"p-text\">{work.desc}</p>\r\n                    </motion.div>\r\n                    {/* <ReactTooltip\r\n                      id={work.name}\r\n                      effect=\"solid\"\r\n                      arrowColor=\"#fff\"\r\n                      className=\"skills-tooltip\"\r\n                    >\r\n                      {work.desc}\r\n                    </ReactTooltip> */}\r\n                  </>\r\n                ))}\r\n              </motion.div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppWrap(\r\n  MotionWrap(Skills, 'app__skills'),\r\n  'skills',\r\n  'app__whitebg',\r\n);\r\n","import React from 'react';\r\nimport { NavigationDots } from '../components';\r\n\r\nconst AppWrap = (Component, idName, classNames) => function HOC() {\r\n  return (\r\n    <div id={idName} className={`app__container ${classNames}`}>\r\n      {/* <SocialMedia /> */}\r\n      <div className=\"app__wrapper app__flex\">\r\n        <Component />\r\n\r\n        <div className=\"copyright\">\r\n          <p className=\"p-text\">@2020 MICHAEL</p>\r\n          <p className=\"p-text\">All rights reserved</p>\r\n        </div>\r\n      </div>\r\n      <NavigationDots active={idName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppWrap;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst MotionWrap = (Component, classNames) => function HOC() {\r\n  return (\r\n    <motion.div\r\n      whileInView={{ y: [100, 50, 0], opacity: [0, 0, 1] }}\r\n      transition={{ duration: 0.5 }}\r\n      className={`${classNames} app__flex`}\r\n    >\r\n      <Component />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default MotionWrap;\r\n"],"names":["client","sanityClient","projectId","process","dataset","apiVersion","useCdn","token","ignoreBrowserTokenWarning","builder","imageUrlBuilder","urlFor","source","image","AppWrap","MotionWrap","useState","experiences","setExperiences","skills","setSkills","useEffect","then","data","className","motion","length","map","skill","index","whileInView","opacity","transition","duration","style","backgroundColor","bgColor","src","icon","alt","sizes","name","experience","year","works","work","company","_key","desc","Component","idName","classNames","id","active","y"],"sourceRoot":""}